- name: Robin Post upgrade
  shell: cd /root/build/{{ robin_version }} && ./robin-script-{{ robin_version }}.sh post-upgrade --yes --force --username={{ robin_user }} --password={{ robin_pass }} --silent --ip-protocol={{ ip_protocol }}
  async: 3600
  poll: 60
  when: inventory_hostname in groups['primary-master'][0] and upgrade_release_major_version == '5.4.3'
  tags: [v5.4hf3]

- name: Robin Post upgrade
  shell: cd /root/build/{{ robin_version }} && ./robin-script-{{ robin_version }}.sh post-upgrade --yes --force --username={{ robin_user }} --password={{ robin_pass }} --silent 
  async: 3600
  poll: 60
  when: inventory_hostname in groups['primary-master'][0] and upgrade_release_major_version == '5.5.0'
  tags: [v5.4hf3]

- name: Include common tasks to find the active node
  include_tasks: find-active-node.yaml
  name: "robin post upgrade - active"
  tags:
    - v5.4hf5

- name: Robin Post upgrade on Active Master
  shell: cd /root/build/{{ robin_version }} && ./robin-script-{{ robin_version }}.sh post-upgrade --yes --force --username={{ robin_user }} --password={{ robin_pass }} --silent --ip-protocol={{ ip_protocol }}
  async: 3600
  poll: 60
  when: ansible_facts['fqdn'] == active_node.results[0].stdout and upgrade_release_major_version == '5.4.3'
  tags: [v5.4hf5]

- name: Robin Post upgrade on Active Master
  shell: cd /root/build/{{ robin_version }} && ./robin-script-{{ robin_version }}.sh post-upgrade --yes --force --username={{ robin_user }} --password={{ robin_pass }} --silent 
  async: 3600
  poll: 60
  when: ansible_facts['fqdn'] == active_node.results[0].stdout and upgrade_release_major_version == '5.5.0'
  tags: [v5.4hf5]

- name: Get Robin upgrade status
  shell: kubectl exec -it -n robinio $(kubectl get pods -n robinio -l app=robin-master  -o jsonpath='{.items[*].metadata.name}') -- robin upgrade status
  register: robin_upgrade_status_output
  args:
    executable: /bin/bash
  when: inventory_hostname in groups['primary-master'][0]  
  tags: upgrade_status

- name: Robin Upgrade Status
  debug:
    msg: "{{robin_upgrade_status_output.stdout }}"
  tags: [get_upgrade_robin_status]
  when: inventory_hostname in groups['primary-master'][0]

  
#- name: Robin post upgrade for 5.3
#  tags: [v5.3]
#  block:
#  - name: Post Robin upgrade 1
#    shell: cd /root/build/{{ robin_version }} && ./{{ script_name }} post-robin-upgrade-all-hosts  --username={{ robin_user }} --password={{ robin_pass }}
#
#  - name: Post Robin upgrade 2
#    shell: cd /root/build/{{ robin_version }} && ./{{ script_name }} post-robin-upgrade  --username={{ robin_user }} --password={{ robin_pass }}
#    async: 3600
#    poll: 60
#    when: inventory_hostname in groups['primary-master'][0]
#
#  - name: Check robin mutatingwebhookconfigurations
#    shell: kubectl get mutatingwebhookconfigurations | egrep '^k8srobin|^robin' | wc -l
#    register: condition_result
#
#  - name: Rebounce robink8s-serverext pods
#    shell: kubectl delete pods  $(kubectl get pods -n robinio -lapp=robink8s-serverext --no-headers=true  | awk '{print $1}' | head -1) -n robinio
#    when: inventory_hostname in groups['primary-master'][0] and condition_result.stdout != "8"
#
#  - name: Wait for all pods to be up and running
#    shell: |
#      while [[ $(kubectl get pods -n robinio -l app=robink8s-serverext --no-headers | grep -c ' Running ') -ne $(kubectl get daemonset robink8s-serverext -n robinio -o=jsonpath='{.status.desiredNumberScheduled}') ]]; do
#        echo "Waiting for all pods to be up and running..."
#        sleep 10
#      done
#    when: inventory_hostname in groups['primary-master'][0] and condition_result.stdout != "8"
#
#  - name: Rebounce robin server
#    shell: kubectl exec -it $(kubectl get pods -l robin.io/robinrole=master -o name -n robinio) -n robinio -- systemctl restart robin-server&
#    when: inventory_hostname in groups['primary-master'][0] and condition_result.stdout != "8"
#
#  - name: wait robin server service to be up and running
#    shell: |
#      while kubectl exec -it $(kubectl get pods -l robin.io/robinrole=master -o name -n robinio) -n robinio -- robin-service-status | grep robin-server | grep -qv active; do
#        echo "Waiting for robin server service to be up and running..."
#        sleep 10
#      done
#    when: inventory_hostname in groups['primary-master'][0] and condition_result.stdout != "8"
